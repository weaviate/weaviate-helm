{{ if .Values.experimental.querier.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: querier
  labels:
    name: querier
    app: querier
    app.kubernetes.io/name: querier
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.experimental.querier.replicas }}
  updateStrategy:
{{ toYaml .Values.updateStrategy | indent 4}}
  selector:
    matchLabels:
      app: querier
  template:
    metadata:
      labels:
        app: querier
        app.kubernetes.io/name: querier
    spec:
      securityContext:
{{ toYaml .Values.securityContext | indent 8}}
      {{- if (index .Values "serviceAccountName") }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- else if and (index .Values "backups" "s3" "enabled") (index .Values "backups" "s3" "serviceAccountName") }} # for backwards compatibility
      serviceAccountName: {{ .Values.backups.s3.serviceAccountName }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- include "image.pullSecrets" (dict "pullSecrets" $.Values.image.pullSecrets) | nindent 6 }}
      {{- include "pod.priorityClassName" ( dict "global" $.Values.globalPriorityClassName "priorityClassName" .Values.priorityClassName) | nindent 6 }}
      containers:
      - name: querier
        image: '{{ .Values.experimental.querier.image}}'
        imagePullPolicy: {{ .Values.experimental.querier.pullPolicy }}
        {{- with .Values.experimental.querier.command }}
        command: {{ toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.experimental.querier.args }}
        args: {{ toYaml . | nindent 10 }}
        {{- end }}
        resources:
{{ toYaml .Values.experimental.querier.resources | indent 10 }}
        env:
        {{- if or $.Values.experimental.querier.env $.Values.experimental.querier.envSecrets }}
          {{- range $key, $value := $.Values.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          {{- range $key, $secret := $.Values.experimental.querier.envSecrets }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ $secret }}
                key: {{ $key }}
          {{- end }}
          {{- end }}
          - name: CLUSTER_BASIC_AUTH_USERNAME
            valueFrom:
              secretKeyRef:
                name: weaviate-cluster-api-basic-auth
                key: username
          - name: CLUSTER_BASIC_AUTH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: weaviate-cluster-api-basic-auth
                key: password
          - name: PERSISTENCE_DATA_PATH
            value: '/var/lib/weaviate'
          - name: DEFAULT_VECTORIZER_MODULE
            value: {{ index .Values "modules" "default_vectorizer_module" | trim }}
          {{ template "enabled_modules" . }}
          {{ template "raft_configuration" . }}
          {{- if index .Values "modules" "text2vec-transformers" "enabled" }}
          - name: TRANSFORMERS_INFERENCE_API
            value: http://{{ index .Values "modules" "text2vec-transformers" "fullnameOverride" }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:8080
          {{- else if index .Values "modules" "text2vec-transformers" "inferenceUrl" }}
          - name: TRANSFORMERS_INFERENCE_API
            value: {{ index .Values "modules" "text2vec-transformers" "inferenceUrl" }}
          {{- else }}
              {{- if index .Values "modules" "text2vec-transformers" "passageQueryServices" "passage" "enabled" }}
          - name: TRANSFORMERS_PASSAGE_INFERENCE_API
            value: http://{{ index .Values "modules" "text2vec-transformers" "passageQueryServices" "passage" "fullnameOverride" }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:8080
              {{- else if index .Values "modules" "text2vec-transformers" "passageQueryServices" "passage" "inferenceUrl" }}
          - name: TRANSFORMERS_PASSAGE_INFERENCE_API
            value: {{ index .Values "modules" "text2vec-transformers" "passageQueryServices" "passage" "inferenceUrl" }}
              {{- end }}
              {{- if index .Values "modules" "text2vec-transformers" "passageQueryServices" "query" "enabled" }}
          - name: TRANSFORMERS_QUERY_INFERENCE_API
            value: http://{{ index .Values "modules" "text2vec-transformers" "passageQueryServices" "query" "fullnameOverride" }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:8080
              {{- else if index .Values "modules" "text2vec-transformers" "passageQueryServices" "query" "inferenceUrl" }}
          - name: TRANSFORMERS_QUERY_INFERENCE_API
            value: {{ index .Values "modules" "text2vec-transformers" "passageQueryServices" "query" "inferenceUrl" }}
              {{- end }}
          {{- end }}
          {{- if index .Values "modules" "text2vec-gpt4all" "enabled" }}
          - name: GPT4ALL_INFERENCE_API
            value: http://{{ index .Values "modules" "text2vec-gpt4all" "fullnameOverride" }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:8080
          {{- else if index .Values "modules" "text2vec-gpt4all" "inferenceUrl" }}
          - name: GPT4ALL_INFERENCE_API
            value: {{ index .Values "modules" "text2vec-gpt4all" "inferenceUrl" }}
          {{- end }}
          {{- if index .Values "modules" "multi2vec-clip" "enabled" }}
          - name: CLIP_INFERENCE_API
            value: http://{{ index .Values "modules" "multi2vec-clip" "fullnameOverride" }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:8080
          {{- else if index .Values "modules" "multi2vec-clip" "inferenceUrl" }}
          - name: CLIP_INFERENCE_API
            value: {{ index .Values "modules" "multi2vec-clip" "inferenceUrl" }}
          {{- end }}
          {{- if index .Values "modules" "multi2vec-bind" "enabled" }}
          - name: BIND_INFERENCE_API
            value: http://{{ index .Values "modules" "multi2vec-bind" "fullnameOverride" }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:8080
          {{- else if index .Values "modules" "multi2vec-bind" "inferenceUrl" }}
          - name: BIND_INFERENCE_API
            value: {{ index .Values "modules" "multi2vec-bind" "inferenceUrl" }}
          {{- end }}
          {{- if index .Values "modules" "qna-transformers" "enabled" }}
          - name: QNA_INFERENCE_API
            value: http://{{ index .Values "modules" "qna-transformers" "fullnameOverride" }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:8080
          {{- else if index .Values "modules" "qna-transformers" "inferenceUrl" }}
          - name: QNA_INFERENCE_API
            value: {{ index .Values "modules" "qna-transformers" "inferenceUrl" }}
          {{- end }}
          {{- if index .Values "modules" "img2vec-neural" "enabled" }}
          - name: IMAGE_INFERENCE_API
            value: http://{{ index .Values "modules" "img2vec-neural" "fullnameOverride" }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:8080
          {{- else if index .Values "modules" "img2vec-neural" "inferenceUrl" }}
          - name: IMAGE_INFERENCE_API
            value: {{ index .Values "modules" "img2vec-neural" "inferenceUrl" }}
          {{- end }}
          {{- if index .Values "modules" "text-spellcheck" "enabled" }}
          - name: SPELLCHECK_INFERENCE_API
            value: http://{{ index .Values "modules" "text-spellcheck" "fullnameOverride" }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:8080
          {{- else if index .Values "modules" "text-spellcheck" "inferenceUrl" }}
          - name: SPELLCHECK_INFERENCE_API
            value: {{ index .Values "modules" "text-spellcheck" "inferenceUrl" }}
          {{- end }}
          {{- if index .Values "modules" "ner-transformers" "enabled" }}
          - name: NER_INFERENCE_API
            value: http://{{ index .Values "modules" "ner-transformers" "fullnameOverride" }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:8080
          {{- else if index .Values "modules" "ner-transformers" "inferenceUrl" }}
          - name: NER_INFERENCE_API
            value: {{ index .Values "modules" "ner-transformers" "inferenceUrl" }}
          {{- end }}
          {{- if index .Values "modules" "sum-transformers" "enabled" }}
          - name: SUM_INFERENCE_API
            value: http://{{ index .Values "modules" "sum-transformers" "fullnameOverride" }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:8080
          {{- else if index .Values "modules" "sum-transformers" "inferenceUrl" }}
          - name: SUM_INFERENCE_API
            value: {{ index .Values "modules" "sum-transformers" "inferenceUrl" }}
          {{- end }}
          {{- if index .Values "modules" "reranker-transformers" "enabled" }}
          - name: RERANKER_INFERENCE_API
            value: http://{{ index .Values "modules" "reranker-transformers" "fullnameOverride" }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}:8080
          {{- else if index .Values "modules" "reranker-transformers" "inferenceUrl" }}
          - name: RERANKER_INFERENCE_API
            value: {{ index .Values "modules" "reranker-transformers" "inferenceUrl" }}
          {{- end }}
          {{ if or (and (index .Values "modules" "text2vec-openai" "enabled") (index .Values "modules" "text2vec-openai" "apiKey")) (and (index .Values "modules" "qna-openai" "enabled") (index .Values "modules" "qna-openai" "apiKey")) (and (index .Values "modules" "generative-openai" "enabled") (index .Values "modules" "generative-openai" "apiKey")) }}
          - name: OPENAI_APIKEY
            valueFrom:
              secretKeyRef:
                name: weaviate-openai
                key: apiKey
          {{- end  }}
          {{ if or (and (index .Values "modules" "text2vec-openai" "enabled") (index .Values "modules" "text2vec-openai" "azureApiKey")) (and (index .Values "modules" "qna-openai" "enabled") (index .Values "modules" "qna-openai" "azureApiKey")) (and (index .Values "modules" "generative-openai" "enabled") (index .Values "modules" "generative-openai" "azureApiKey")) }}
          - name: AZURE_APIKEY
            valueFrom:
              secretKeyRef:
                name: weaviate-openai
                key: apiKey
          {{- end  }}
          {{- if and (index .Values "modules" "text2vec-huggingface" "enabled") (index .Values "modules" "text2vec-huggingface" "apiKey") }}
          - name: HUGGINGFACE_APIKEY
            valueFrom:
              secretKeyRef:
                name: weaviate-huggingface
                key: apiKey
          {{- end  }}
          {{- if or (and (index .Values "modules" "text2vec-cohere" "enabled") (index .Values "modules" "text2vec-cohere" "apiKey")) (and (index .Values "modules" "generative-cohere" "enabled") (index .Values "modules" "generative-cohere" "apiKey")) (and (index .Values "modules" "reranker-cohere" "enabled") (index .Values "modules" "reranker-cohere" "apiKey")) }}
          - name: COHERE_APIKEY
            valueFrom:
              secretKeyRef:
                name: weaviate-cohere
                key: apiKey
          {{- end  }}
          {{- if or (and (index .Values "modules" "text2vec-palm" "enabled") (index .Values "modules" "text2vec-palm" "apiKey")) (and (index .Values "modules" "generative-palm" "enabled") (index .Values "modules" "generative-palm" "apiKey")) (and (index .Values "modules" "multi2vec-palm" "enabled") (index .Values "modules" "multi2vec-palm" "apiKey")) }}
          - name: PALM_APIKEY
            valueFrom:
              secretKeyRef:
                name: weaviate-palm
                key: apiKey
          {{- end  }}
          {{- if or (and (index .Values "modules" "text2vec-jinaai" "enabled") (index .Values "modules" "text2vec-jinaai" "apiKey")) (and (index .Values "modules" "reranker-jinaai" "enabled") (index .Values "modules" "reranker-jinaai" "apiKey")) }}
          - name: JINAAI_APIKEY
            valueFrom:
              secretKeyRef:
                name: weaviate-jinaai
                key: apiKey
          {{- end  }}
          {{- if or (and (index .Values "modules" "text2vec-voyageai" "enabled") (index .Values "modules" "text2vec-voyageai" "apiKey")) (and (index .Values "modules" "reranker-voyageai" "enabled") (index .Values "modules" "reranker-voyageai" "apiKey")) }}
          - name: VOYAGEAI_APIKEY
            valueFrom:
              secretKeyRef:
                name: weaviate-voyageai
                key: apiKey
          {{- end  }}
          {{- if and (index .Values "modules" "generative-anyscale" "enabled") (index .Values "modules" "generative-anyscale" "apiKey") }}
          - name: ANYSCALE_APIKEY
            valueFrom:
              secretKeyRef:
                name: weaviate-anyscale
                key: apiKey
          {{- end  }}
          {{- if and (index .Values "modules" "generative-anthropic" "enabled") (index .Values "modules" "generative-anthropic" "apiKey") }}
          - name: ANTHROPIC_APIKEY
            valueFrom:
              secretKeyRef:
                name: weaviate-anthropic
                key: apiKey
          {{- end  }}
          {{- if or (and (index .Values "modules" "text2vec-mistral" "enabled") (index .Values "modules" "text2vec-mistral" "apiKey")) (and (index .Values "modules" "generative-mistral" "enabled") (index .Values "modules" "generative-mistral" "apiKey")) }}
          - name: MISTRAL_APIKEY
            valueFrom:
              secretKeyRef:
                name: weaviate-mistral
                key: apiKey
          {{- end  }}
          {{- if or (and (index .Values "modules" "text2vec-octoai" "enabled") (index .Values "modules" "text2vec-octoai" "apiKey")) (and (index .Values "modules" "generative-octoai" "enabled") (index .Values "modules" "generative-octoai" "apiKey")) }}
          - name: OCTOAI_APIKEY
            valueFrom:
              secretKeyRef:
                name: weaviate-octoai
                key: apiKey
          {{- end  }}
          {{- if and (index .Values "modules" "generative-friendliai" "enabled") (index .Values "modules" "generative-friendliai" "token") }}
          - name: FRIENDLI_TOKEN
            valueFrom:
              secretKeyRef:
                name: weaviate-friendliai
                key: token
          {{- end  }}
          {{- if or (and (index .Values "modules" "text2vec-databricks" "enabled") (index .Values "modules" "text2vec-databricks" "token")) (and (index .Values "modules" "generative-databricks" "enabled") (index .Values "modules" "generative-databricks" "token")) }}
          - name: DATABRICKS_TOKEN
            valueFrom:
              secretKeyRef:
                name: weaviate-databricks
                key: token
          {{- end  }}
          {{- if and (index .Values "offload" "s3" "enabled") (index .Values "offload" "s3" "envconfig") }}
            {{- range $key, $value := index .Values "offload" "s3" "envconfig" }}
          - name: {{ $key }}
            value: {{ $value | quote }}
            {{- end }}
          {{- end  }}
          {{- if and (index .Values "backups" "filesystem" "enabled") (index .Values "backups" "filesystem" "envconfig") }}
            {{- range $key, $value := index .Values "backups" "filesystem" "envconfig" }}
          - name: {{ $key }}
            value: {{ $value | quote }}
            {{- end }}
          {{- end  }}
          {{- if index .Values "backups" "s3" "enabled" }}
            {{- if index .Values "backups" "s3" "envconfig" }}
              {{- range $key, $value := index .Values "backups" "s3" "envconfig" }}
          - name: {{ $key }}
            value: {{ $value | quote }}
              {{- end }}
            {{- end }}
          {{- end  }}
          {{- if or (index .Values "offload" "s3" "enabled") (index .Values "backups" "s3" "enabled") (index .Values "modules" "text2vec-aws" "enabled") (index .Values "modules" "generative-aws" "enabled") }}
            {{- if index .Values "offload" "s3" "envSecrets" }}
              {{- range $key, $secret := $.Values.offload.s3.envSecrets }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ $secret }}
                key: {{ $key | quote }}
              {{- end }}
            {{- else if index .Values "backups" "s3" "envSecrets" }}
              {{- range $key, $secret := $.Values.backups.s3.envSecrets }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ $secret }}
                key: {{ $key | quote }}
              {{- end }}
            {{- else if index .Values "modules" "text2vec-aws" "envSecrets" }}
              {{- range $key, $secret := (index .Values "modules" "text2vec-aws" "envSecrets") }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ $secret }}
                key: {{ $key | quote }}
              {{- end }}
            {{- else if index .Values "modules" "generative-aws" "envSecrets" }}
              {{- range $key, $secret := (index .Values "modules" "generative-aws" "envSecrets") }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ $secret }}
                key: {{ $key | quote }}
              {{- end }}
            {{- end }}
            {{- if and (index .Values "backups" "s3" "secrets") (index .Values "backups" "s3" "secrets" "AWS_ACCESS_KEY_ID") }}
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: backup-s3
                key: AWS_ACCESS_KEY_ID
            {{- else if or (and (index .Values "offload" "s3" "secrets") (index .Values "offload" "s3" "secrets" "AWS_ACCESS_KEY_ID")) (and (index .Values "modules" "text2vec-aws" "secrets") (index .Values "modules" "text2vec-aws" "secrets" "AWS_ACCESS_KEY_ID")) (and (index .Values "modules" "generative-aws" "secrets") (index .Values "modules" "generative-aws" "secrets" "AWS_ACCESS_KEY_ID")) }}
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: weaviate-aws
                key: AWS_ACCESS_KEY_ID
            {{- end }}
            {{- if and (index .Values "backups" "s3" "secrets") (index .Values "backups" "s3" "secrets" "AWS_SECRET_ACCESS_KEY") }}
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: backup-s3
                key: AWS_SECRET_ACCESS_KEY
            {{- else if or (and (index .Values "offload" "s3" "secrets") (index .Values "offload" "s3" "secrets" "AWS_SECRET_ACCESS_KEY")) (and (index .Values "modules" "text2vec-aws" "secrets") (index .Values "modules" "text2vec-aws" "secrets" "AWS_SECRET_ACCESS_KEY")) (and (index .Values "modules" "generative-aws" "secrets") (index .Values "modules" "generative-aws" "secrets" "AWS_SECRET_ACCESS_KEY")) }}
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: weaviate-aws
                key: AWS_SECRET_ACCESS_KEY
            {{- end }}
          {{- end  }}
          {{- if index .Values "backups" "gcs" "enabled" }}
            {{- if index .Values "backups" "gcs" "envconfig" }}
              {{- range $key, $value := index .Values "backups" "gcs" "envconfig" }}
          - name: {{ $key }}
            value: {{ $value | quote }}
              {{- end }}
            {{- end }}
            {{- if or (index .Values "backups" "gcs" "secrets") (index .Values "backups" "gcs" "envSecrets") }}
              {{- if or (index .Values "backups" "gcs" "secrets" "GOOGLE_APPLICATION_CREDENTIALS") (index .Values "backups" "gcs" "envSecrets" "GOOGLE_APPLICATION_CREDENTIALS") }}
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: "/etc/gcp/credentials.json"
              {{- end }}
            {{- end }}
          {{- end  }}
          {{- if index .Values "backups" "azure" "enabled" }}
            {{- if index .Values "backups" "azure" "envconfig" }}
              {{- range $key, $value := index .Values "backups" "azure" "envconfig" }}
          - name: {{ $key }}
            value: {{ $value | quote }}
              {{- end }}
            {{- end }}
            {{- if index .Values "backups" "azure" "envSecrets" }}
              {{- range $key, $secret := $.Values.backups.azure.envSecrets }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ $secret }}
                key: {{ $key | quote }}
              {{- end }}
            {{- end }}
            {{- if and (index .Values "backups" "azure" "secrets") (index .Values "backups" "azure" "secrets" "AZURE_STORAGE_ACCOUNT") }}
          - name: AZURE_STORAGE_ACCOUNT
            valueFrom:
              secretKeyRef:
                name: backup-azure
                key: AZURE_STORAGE_ACCOUNT
            {{- end }}
            {{- if and (index .Values "backups" "azure" "secrets") (index .Values "backups" "azure" "secrets" "AZURE_STORAGE_KEY") }}
          - name: AZURE_STORAGE_KEY
            valueFrom:
              secretKeyRef:
                name: backup-azure
                key: AZURE_STORAGE_KEY
            {{- end }}
            {{- if and (index .Values "backups" "azure" "secrets") (index .Values "backups" "azure" "secrets" "AZURE_STORAGE_CONNECTION_STRING") }}
          - name: AZURE_STORAGE_CONNECTION_STRING
            valueFrom:
              secretKeyRef:
                name: backup-azure
                key: AZURE_STORAGE_CONNECTION_STRING
            {{- end }}
          {{- end  }}
          - name: CLUSTER_JOIN
            value: {{ .Values.service.name }}-headless.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
        ports:
          - containerPort: 8080
          {{- if .Values.env.PROMETHEUS_MONITORING_ENABLED }}
          - name: metrics
            containerPort: 2112
            protocol: TCP
          {{- end }}
          {{ if .Values.grpcService.enabled }}
          - name: grpc
            containerPort: 50051
            protocol: TCP
          {{- end }}
        volumeMounts:
          - name: weaviate-config
            mountPath: /weaviate-config
          {{- if index .Values "backups" "gcs" "enabled" }}
            {{- if or (index .Values "backups" "gcs" "secrets") (index .Values "backups" "gcs" "envSecrets") }}
              {{- if or (index .Values "backups" "gcs" "secrets" "GOOGLE_APPLICATION_CREDENTIALS") (index .Values "backups" "gcs" "envSecrets" "GOOGLE_APPLICATION_CREDENTIALS") }}
          - name: gcs-service-account-credentials-volume
            mountPath: /etc/gcp
            readOnly: true
              {{- end }}
            {{- end }}
          {{- end }}
          {{ with .Values.extraVolumeMounts }}
            {{ toYaml . | nindent 10 }}
          {{- end }}
        securityContext:
{{ toYaml .Values.containerSecurityContext | indent 10}}
      volumes:
        - name: weaviate-config
          configMap:
            {{ if .Values.custom_config_map.enabled }}name: {{ .Values.custom_config_map.name }} {{ else }}name: weaviate-config{{ end }}
        {{- if index .Values "backups" "gcs" "enabled" }}
          {{- if and (index .Values "backups" "gcs" "secrets") (index .Values "backups" "gcs" "secrets" "GOOGLE_APPLICATION_CREDENTIALS") }}
        - name: gcs-service-account-credentials-volume
          secret:
            secretName: backup-gcs
            items:
            - key: GOOGLE_APPLICATION_CREDENTIALS
              path: credentials.json
          {{- end }}
          {{- if and (index .Values "backups" "gcs" "envSecrets") (index .Values "backups" "gcs" "envSecrets" "GOOGLE_APPLICATION_CREDENTIALS") }}
        - name: gcs-service-account-credentials-volume
          secret:
            secretName: {{ index .Values "backups" "gcs" "envSecrets" "GOOGLE_APPLICATION_CREDENTIALS" }}
            items:
            - key: GOOGLE_APPLICATION_CREDENTIALS
              path: credentials.json
          {{- end }}
        {{- end }}
        {{ with .Values.extraVolumes }}
          {{ toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hostAliases }}
      hostAliases:
        {{ toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
